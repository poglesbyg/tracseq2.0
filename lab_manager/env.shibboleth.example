# Laboratory Manager Environment Configuration with Shibboleth Authentication
# Copy this file to .env and update values for your environment

# Database Configuration
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=lab_manager
DATABASE_URL=postgres://postgres:postgres@db:5432/lab_manager

# Application Configuration
JWT_SECRET=your-super-secret-jwt-key-change-in-production
RUST_LOG=info
HOST=0.0.0.0
PORT=3000

# Storage Configuration
STORAGE_PATH=/usr/local/bin/storage

# External Services
RAG_SERVICE_URL=http://host.docker.internal:8000

# =============================================================================
# SHIBBOLETH AUTHENTICATION CONFIGURATION
# =============================================================================

# Enable Shibboleth Authentication
SHIBBOLETH_ENABLED=true

# Hybrid Mode - Allow both Shibboleth and JWT authentication
# Set to false to only allow Shibboleth authentication
SHIBBOLETH_HYBRID_MODE=true

# User Management Settings
SHIBBOLETH_AUTO_CREATE_USERS=true
SHIBBOLETH_AUTO_UPDATE_ATTRIBUTES=true

# Default role for new users created via Shibboleth
# Options: Guest, DataAnalyst, ResearchScientist, LabTechnician, PrincipalInvestigator, LabAdministrator
SHIBBOLETH_DEFAULT_ROLE=Guest

# Docker Port Mappings
DB_EXTERNAL_PORT=5433
BACKEND_DEV_PORT=3000
BACKEND_PROD_PORT=3001
FRONTEND_DEV_PORT=5173
FRONTEND_PROD_PORT=8080

# Frontend Configuration
NODE_ENV=development
BACKEND_URL=http://dev:3000

# Deployment Mode
DEPLOYMENT_MODE=development

# =============================================================================
# SHIBBOLETH DEPLOYMENT NOTES
# =============================================================================

# 1. Web Server Configuration:
#    - For Apache: Install and configure mod_shib2
#    - For Nginx: Set up auth_request or FastCGI authentication
#    - Use the provided apache-shibboleth.conf or nginx-shibboleth.conf files

# 2. Shibboleth SP Configuration (shibboleth2.xml):
#    - Set your SP entityID: <ApplicationDefaults entityID="https://lab-manager.example.edu">
#    - Configure IdP discovery or direct IdP: <SSO entityID="https://idp.example.edu">
#    - Set up metadata: <MetadataProvider type="XML" uri="https://federation.example.edu/metadata.xml"/>
#    - Configure session timeouts and security settings

# 3. Attribute Mapping (attribute-map.xml):
#    Required attributes:
#    - eduPersonPrincipalName (eppn) -> eppn
#    - mail -> mail
#    - displayName -> displayName
#    - givenName -> givenName
#    - sn -> sn
#    
#    Optional attributes for enhanced functionality:
#    - eduPersonAffiliation -> affiliation
#    - eduPersonEntitlement -> entitlement
#    - isMemberOf -> isMemberOf
#    
#    Custom lab attributes (coordinate with IdP admin):
#    - labRole -> labRole (for direct role mapping)
#    - department -> department
#    - institution -> institution

# 4. Role Mapping Examples:
#    The system automatically maps Shibboleth attributes to lab roles:
#    
#    Direct labRole attribute:
#    - labRole="lab_administrator" -> LabAdministrator
#    - labRole="principal_investigator" -> PrincipalInvestigator
#    - labRole="lab_technician" -> LabTechnician
#    - labRole="research_scientist" -> ResearchScientist
#    - labRole="data_analyst" -> DataAnalyst
#    
#    Entitlement-based mapping:
#    - entitlement contains "lab:admin" -> LabAdministrator
#    - entitlement contains "lab:pi" -> PrincipalInvestigator
#    - entitlement contains "lab:technician" -> LabTechnician
#    - entitlement contains "lab:scientist" -> ResearchScientist
#    - entitlement contains "lab:analyst" -> DataAnalyst
#    
#    Group membership mapping:
#    - isMemberOf contains "cn=lab-administrators" -> LabAdministrator
#    - isMemberOf contains "cn=principal-investigators" -> PrincipalInvestigator
#    - isMemberOf contains "cn=lab-technicians" -> LabTechnician
#    - isMemberOf contains "cn=research-scientists" -> ResearchScientist
#    - isMemberOf contains "cn=data-analysts" -> DataAnalyst

# 5. Testing Shibboleth Integration:
#    - Access /shibboleth-login to initiate Shibboleth authentication
#    - Check /Shibboleth.sso/Status for SP status
#    - Verify attribute release at /shibboleth-test (if configured)
#    - Test logout via /shibboleth-logout
#    - Ensure hybrid mode works by testing JWT authentication alongside Shibboleth

# 6. Security Considerations:
#    - Use HTTPS in production (required for Shibboleth)
#    - Configure proper session timeouts
#    - Implement attribute filters to control information release
#    - Monitor logs for authentication failures and security events
#    - Keep Shibboleth SP software updated

# 7. Production Deployment:
#    - Set DEPLOYMENT_MODE=production
#    - Use strong JWT_SECRET (min 32 characters)
#    - Configure proper database credentials
#    - Set up SSL certificates
#    - Configure firewall rules
#    - Set up monitoring and alerting 
