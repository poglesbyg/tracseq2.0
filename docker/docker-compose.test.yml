version: '3.8'

services:
  # Test Database
  postgres-test:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: tracseq_test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: testpass
    ports:
      - "5432:5432"
    volumes:
      - postgres-test-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test Redis
  redis-test:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test MinIO (S3 compatible)
  minio-test:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-test-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Create test buckets
  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio-test:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio-test:9000 minioadmin minioadmin;
      mc mb minio/tracseq-laboratory-data;
      mc mb minio/tracseq-sequencing-results;
      mc mb minio/tracseq-ml-models;
      mc mb minio/tracseq-backups;
      exit 0;
      "

  # Test Kafka
  zookeeper-test:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka-test:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper-test
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-test:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Test services can be added here
  # auth-service-test:
  #   build:
  #     context: ./auth_service
  #     dockerfile: Dockerfile
  #   environment:
  #     DATABASE_URL: postgresql://postgres:testpass@postgres-test:5432/tracseq_test
  #     REDIS_URL: redis://redis-test:6379
  #     ENVIRONMENT: test
  #   depends_on:
  #     postgres-test:
  #       condition: service_healthy
  #     redis-test:
  #       condition: service_healthy
  #   ports:
  #     - "8081:8081"

volumes:
  postgres-test-data:
  minio-test-data:

networks:
  default:
    name: tracseq-test-network