version: '3.8'

services:
  # PostgreSQL database for versioning service
  postgres-versioning:
    image: postgres:15-alpine
    container_name: tracseq-versioning-postgres
    environment:
      POSTGRES_DB: tracseq_versioning
      POSTGRES_USER: versioning_user
      POSTGRES_PASSWORD: versioning_password
    ports:
      - "5433:5432"
    volumes:
      - versioning_postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - versioning-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U versioning_user -d tracseq_versioning"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Spreadsheet Versioning Service
  versioning-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tracseq-versioning-service
    environment:
      PORT: 8088
      RUST_LOG: info
      RUST_BACKTRACE: 1
      
      # Database configuration
      DATABASE_URL: postgresql://versioning_user:versioning_password@postgres-versioning:5432/tracseq_versioning
      
      # Service configuration
      MAX_FILE_SIZE_MB: 100
      MAX_VERSIONS_PER_SPREADSHEET: 50
      ENABLE_AUTO_VERSIONING: true
      RETENTION_DAYS: 365
      
      # Diff algorithm configuration
      DIFF_ALGORITHM: structural_aware
      
      # Conflict resolution configuration
      CONFLICT_STRATEGY: manual_review
      AUTO_RESOLVE_THRESHOLD: 0.95
      REQUIRE_MANUAL_APPROVAL: true
      
    ports:
      - "8088:8088"
    depends_on:
      postgres-versioning:
        condition: service_healthy
    networks:
      - versioning-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  versioning_postgres_data:

networks:
  versioning-network:
    driver: bridge 
