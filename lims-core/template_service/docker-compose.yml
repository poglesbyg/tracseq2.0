version: '3.8'

services:
  # Template Service Database
  template-postgres:
    image: postgres:15-alpine
    container_name: template-postgres
    environment:
      - POSTGRES_DB=template_db
      - POSTGRES_USER=template_user
      - POSTGRES_PASSWORD=template_password
    ports:
      - "5435:5432"  # Unique port to avoid conflicts
    volumes:
      - template_postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d/
    networks:
      - tracseq-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U template_user -d template_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Template Service
  template-service:
    build: .
    container_name: template-service
    ports:
      - "8083:8083"
    environment:
      # Database Configuration
      - TEMPLATE_DATABASE_URL=postgresql://template_user:template_password@template-postgres:5432/template_db
      
      # Server Configuration
      - TEMPLATE_HOST=0.0.0.0
      - TEMPLATE_PORT=8083
      - RUST_LOG=info
      
      # Service URLs (microservice communication)
      - AUTH_SERVICE_URL=http://auth-service:8080
      - SAMPLE_SERVICE_URL=http://sample-service:8081
      - STORAGE_SERVICE_URL=http://enhanced-storage-service:8082
      - NOTIFICATION_SERVICE_URL=http://notification-service:8085
      
      # Template Configuration
      - TEMPLATE_MAX_PER_USER=100
      - TEMPLATE_MAX_FIELDS=50
      - TEMPLATE_CACHE_ENABLED=true
      - TEMPLATE_AUTO_BACKUP=true
      
      # File Upload Configuration
      - FILE_UPLOAD_PATH=/app/uploads
      - FILE_MAX_SIZE_MB=25
      - FILE_ALLOWED_EXTENSIONS=xlsx,csv,json,xml,txt
      
      # Feature Flags
      - FEATURE_FORM_BUILDER=true
      - FEATURE_TEMPLATE_VERSIONING=true
      - FEATURE_FILE_UPLOAD=true
      - FEATURE_TEMPLATE_CLONING=true
      - FEATURE_ADVANCED_VALIDATION=true
      
      # Environment
      - ENVIRONMENT=development
    volumes:
      - template_uploads:/app/uploads
    networks:
      - tracseq-network
    depends_on:
      template-postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  template_postgres_data:
  template_uploads:

networks:
  tracseq-network:
    external: true 