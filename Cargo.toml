[workspace]
resolver = "2"
members = [
    # Core services
    "lims-core/auth_service",
    "lims-core/barcode_service", 
    "lims-core/project_service",
    "lims-core/reports_service",
    "lims-core/sample_service",
    "lims-core/template_service",
    "lims-core/transaction_service",
    "lims-core/dashboard_service",
    "lims-core/mcp-bridge",
    
    # Enhanced services
    "lims-enhanced/enhanced_storage_service",
    "lims-enhanced/cognitive_assistant_service",
    "lims-enhanced/event_service",
    "lims-enhanced/notification_service",
    "lims-enhanced/spreadsheet_versioning_service",
    
    # Laboratory services
    "lims-laboratory/lab_manager",
    "lims-laboratory/library_prep_service",
    "lims-laboratory/library_details_service",
    "lims-laboratory/sequencing_service",
    "lims-laboratory/qaqc_service",
    "lims-laboratory/flow_cell_service",
    
    # Test helpers
    "test-helpers",
    "temp_auth_test"
]
exclude = [
    "lims-core/circuit-breaker-lib",
    "lims-core/config-service",
    "kafka"
]

[workspace.package]
version = "0.1.0"
authors = ["TracSeq Team"]
edition = "2021"
rust-version = "1.90"
license = "MIT"
repository = "https://github.com/poglesbyg/tracseq2.0"

[workspace.dependencies]
# Async runtime
tokio = { version = "1.42", features = ["full"] }
async-trait = "0.1"

# Web frameworks
axum = { version = "0.7", features = ["multipart", "ws", "macros"] }
axum-test = "14.0"
actix-web = "4.4"
actix-cors = "0.6"
tower = "0.4"
tower-http = { version = "0.5", features = ["cors", "trace"] }

# Database
sqlx = { version = "0.8", features = ["runtime-tokio-rustls", "postgres", "uuid", "time", "json", "macros", "chrono", "migrate", "bigdecimal"] }
sea-orm = { version = "1.1", features = ["sqlx-postgres", "runtime-tokio-rustls", "macros"] }
postgres = { version = "0.19", features = ["with-uuid-1", "with-chrono-0_4"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Testing
rstest = "0.18"

# Other common dependencies
uuid = { version = "1.11", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
thiserror = "2.0"
anyhow = "1.0"
dotenv = "0.15"
reqwest = { version = "0.12", features = ["json", "rustls-tls"] }
jsonwebtoken = "9"
argon2 = "0.5"
redis = { version = "0.27", features = ["aio", "tokio-comp"] }
lapin = "2.3"
deadpool-lapin = "0.12"
kafka = { version = "0.10", features = [] }

# Authentication and SSO
saml2 = "0.3"
quick-xml = "0.31"
bcrypt = "0.15"

# Configuration
config = "0.14"

# Validation
validator = { version = "0.18", features = ["derive"] }

# Async utilities
futures = "0.3"

# Version constraints for problematic dependencies
base64ct = "1.6"

# Metrics
metrics = "0.21"
metrics-exporter-prometheus = "0.12"

[workspace.lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(docsrs)'] }

[profile.dev]
opt-level = 1

[profile.release]
opt-level = "s"          # Optimize for size
lto = true               # Enable link-time optimization
codegen-units = 1        # Reduce parallel code generation for smaller binaries
panic = "abort"          # Reduce binary size by removing unwinding code
strip = true             # Strip debug symbols

# Additional optimization profile for ultra-small builds
[profile.release-small]
inherits = "release"
opt-level = "z"          # Optimize aggressively for size
lto = "fat"              # Full LTO for maximum size reduction
