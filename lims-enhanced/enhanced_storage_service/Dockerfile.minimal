FROM rustlang/rust:nightly-slim as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Create a minimal Cargo.toml
RUN echo '[package]' > Cargo.toml && \
    echo 'name = "enhanced_storage_service"' >> Cargo.toml && \
    echo 'version = "0.1.0"' >> Cargo.toml && \
    echo 'edition = "2021"' >> Cargo.toml && \
    echo '' >> Cargo.toml && \
    echo '[dependencies]' >> Cargo.toml && \
    echo 'tokio = { version = "1.0", features = ["full"] }' >> Cargo.toml && \
    echo 'axum = "0.7"' >> Cargo.toml && \
    echo 'serde_json = "1.0"' >> Cargo.toml && \
    echo 'chrono = { version = "0.4", features = ["serde"] }' >> Cargo.toml

# Copy source and use minimal main
COPY src/main_minimal.rs ./src/main.rs

# Build the application
RUN cargo build --release

# Runtime stage
FROM debian:bookworm-slim

WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd -r -s /bin/false -m -d /app appuser

# Copy the binary from builder
COPY --from=builder /app/target/release/enhanced_storage_service ./

# Change ownership to app user
RUN chown -R appuser:appuser /app
USER appuser

# Expose port
EXPOSE 8082

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8082/health || exit 1

# Run the application
CMD ["./enhanced_storage_service"] 