version: '3.8'

services:
  # Frontend - Using existing working build  
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    container_name: tracseq-minimal-frontend
    ports:
      - "3000:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    restart: unless-stopped
    networks:
      - tracseq_minimal_network

  # RAG Service - Existing working service
  rag-service:
    build:
      context: lab_submission_rag
      dockerfile: ../enhanced_rag_service/Dockerfile
    container_name: tracseq-minimal-rag
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://tracseq_user:tracseq_password@postgres:5432/tracseq_db
      - REDIS_URL=redis://redis:6379/0
      - OLLAMA_BASE_URL=http://ollama:11434
      - LOG_LEVEL=DEBUG
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./lab_submission_rag:/app
      - rag_uploads:/app/uploads
      - rag_exports:/app/exports
    restart: unless-stopped
    networks:
      - tracseq_minimal_network

  # PostgreSQL Database
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: tracseq-minimal-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: tracseq_db
      POSTGRES_USER: tracseq_user
      POSTGRES_PASSWORD: tracseq_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tracseq_user -d tracseq_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - tracseq_minimal_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tracseq-minimal-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - tracseq_minimal_network

  # Ollama AI Service
  ollama:
    image: ollama/ollama:latest
    container_name: tracseq-minimal-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    networks:
      - tracseq_minimal_network

volumes:
  postgres_data:
  redis_data:
  ollama_data:
  rag_uploads:
  rag_exports:
  frontend_node_modules:

networks:
  tracseq_minimal_network:
    driver: bridge 