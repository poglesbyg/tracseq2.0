[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tracseq-api-gateway"
version = "2.1.0"
description = "Enhanced API Gateway for TracSeq 2.0 with production-grade features"
readme = "README-gateway.md"
authors = [
    { name = "TracSeq Team", email = "team@tracseq.com" }
]
requires-python = ">=3.10"

dependencies = [
    # Core web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "uvloop>=0.19.0",
    "httpx>=0.25.0",
    "pydantic>=2.4.0",
    "pydantic-settings>=2.0.0",
    
    # Database
    "asyncpg>=0.29.0",
    
    # Enhanced features
    "redis>=5.0.0",
    "circuitbreaker>=2.0.0",
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
    
    # Monitoring and observability
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.43b0",
    "opentelemetry-instrumentation-httpx>=0.43b0",
    "opentelemetry-exporter-prometheus>=0.43b0",
    "opentelemetry-exporter-jaeger>=1.21.0",
    
    # System monitoring
    "psutil>=5.9.0",
    "aiohttp>=3.9.0",
    
    # Logging and utilities
    "structlog>=23.2.0",
    "python-json-logger>=2.0.0",
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "tenacity>=8.2.0",
    
    # FastMCP integration
    "fastmcp>=0.3.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "httpx[http2]>=0.25.0",
    "black>=23.7.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "locust>=2.17.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-timeout>=2.1.0",
    "pytest-xdist>=3.3.0",
    "faker>=20.0.0",
    "freezegun>=1.2.0",
]

monitoring = [
    "grafana-api>=1.0.0",
    "prometheus-api-client>=0.5.0",
]

[project.urls]
Documentation = "https://docs.tracseq.com/api-gateway"
Issues = "https://github.com/tracseq/api-gateway/issues"
Source = "https://github.com/tracseq/api-gateway"

[project.scripts]
tracseq-gateway = "api_gateway.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/api_gateway"]

[tool.hatch.version]
path = "src/api_gateway/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov-html = [
  "- coverage combine", 
  "coverage html",
]

[tool.hatch.envs.lint]
detached = true
dependencies = [
  "black>=23.1.0",
  "mypy>=1.0.0",
  "ruff>=0.0.243",
]

[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:src/api_gateway tests}"
style = [
  "ruff {args:.}",
  "black --check --diff {args:.}",
]
fmt = [
  "black {args:.}",
  "ruff --fix {args:.}",
  "style",
]
all = [
  "style",
  "typing",
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "PL",   # pylint
    "RUF",  # ruff specific
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "PLR0913", # too many arguments
]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
strict_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
namespace_packages = true
exclude = [
    "tests/",
    "build/",
    "dist/",
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
asyncio_mode = "auto"
addopts = [
    "--verbose",
    "--strict-markers",
    "--tb=short",
    "--cov=api_gateway",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "smoke: Smoke tests",
]

[tool.coverage.run]
source = ["src/api_gateway"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
]

[tool.coverage.paths]
api_gateway = ["src/api_gateway", "*/tracseq-api-gateway/src/api_gateway"]
tests = ["tests", "*/tracseq-api-gateway/tests"]
