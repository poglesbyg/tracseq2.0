# syntax=docker/dockerfile:1

FROM rust:alpine3.20

WORKDIR /usr/src/app

# Install development dependencies
RUN apk add --no-cache \
    musl-dev \
    pkgconfig \
    openssl-dev \
    openssl-libs-static \
    bash \
    git

# Add musl target for static compilation
RUN rustup target add x86_64-unknown-linux-musl

# Install cargo-watch for development (smaller binary)
RUN cargo install cargo-watch --locked

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./

# Create a stub main.rs to prebuild dependencies
RUN mkdir -p src && echo "fn main() {}" > src/main.rs

# Build dependencies only - this layer will be cached
RUN cargo build --target x86_64-unknown-linux-musl
RUN rm -rf src target/x86_64-unknown-linux-musl/debug/deps/lab_manager*

# Set environment variables
ENV RUST_LOG=info
ENV STORAGE_PATH=/usr/src/app/storage
ENV SQLX_OFFLINE=false

# Create storage directory
RUN mkdir -p storage

# Expose the port
EXPOSE 3000

# Use a more memory-efficient watch command
CMD ["cargo", "watch", "--no-gitignore", "--ignore", "target/", "-x", "run --bin lab_manager --target x86_64-unknown-linux-musl"] 
