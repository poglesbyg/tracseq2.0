filebeat.inputs:
  # Docker container logs
  - type: container
    paths:
      - '/var/lib/docker/containers/*/*.log'
    processors:
      - add_docker_metadata:
          host: "unix:///var/run/docker.sock"
      - decode_json_fields:
          fields: ["message"]
          target: "json"
          overwrite_keys: true
    fields:
      logtype: docker
      environment: development
      system: tracseq
    
  # Rust service logs (if they write to files)
  - type: log
    paths:
      - '/var/log/tracseq/*.log'
      - '/var/log/tracseq/*/*.log'
    fields:
      logtype: rust-service
      environment: development
      system: tracseq
    json.keys_under_root: true
    json.add_error_key: true
    
  # System logs
  - type: log
    paths:
      - '/var/log/syslog'
      - '/var/log/messages'
    fields:
      logtype: system
      environment: development
      system: tracseq

processors:
  # Add hostname
  - add_host_metadata:
      when.not.contains.tags: forwarded
      
  # Add Docker metadata
  - add_docker_metadata: ~
  
  # Parse timestamps
  - timestamp:
      field: json.timestamp
      layouts:
        - '2006-01-02T15:04:05.000Z'
        - '2006-01-02T15:04:05Z'
      test:
        - '2024-01-01T12:00:00.000Z'
        - '2024-01-01T12:00:00Z'
        
  # Extract service information from container names
  - script:
      lang: javascript
      source: >
        function process(event) {
          var containerName = event.Get("container.name");
          if (containerName) {
            if (containerName.includes("qaqc")) {
              event.Put("service.name", "qaqc-service");
              event.Put("service.type", "rust");
            } else if (containerName.includes("sample")) {
              event.Put("service.name", "sample-service");
              event.Put("service.type", "rust");
            } else if (containerName.includes("sequencing")) {
              event.Put("service.name", "sequencing-service");
              event.Put("service.type", "rust");
            } else if (containerName.includes("api-gateway")) {
              event.Put("service.name", "api-gateway");
              event.Put("service.type", "python");
            }
          }
        }

output.logstash:
  hosts: ["logstash:5044"]
  
# Alternative: Direct to Elasticsearch
# output.elasticsearch:
#   hosts: ["elasticsearch:9200"]
#   index: "tracseq-filebeat-%{+yyyy.MM.dd}"
#   template.name: "tracseq-filebeat"
#   template.pattern: "tracseq-filebeat-*"

logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat
  keepfiles: 7
  permissions: 0644

# Monitoring
monitoring.enabled: true
monitoring.elasticsearch:
  hosts: ["elasticsearch:9200"]

# Performance tuning
filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: true
  reload.period: 10s

# Queue settings
queue.mem:
  events: 4096
  flush.min_events: 512
  flush.timeout: 1s

# Shipper settings
name: tracseq-filebeat
tags: ["tracseq", "laboratory", "rust-services"] 