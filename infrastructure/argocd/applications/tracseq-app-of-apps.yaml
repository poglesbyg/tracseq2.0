apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tracseq-platform
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:
    repoURL: https://github.com/tracseq/tracseq-2.0
    targetRevision: HEAD
    path: infrastructure/argocd/applications
    
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
    
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
        
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tracseq-microservices
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  
  source:
    repoURL: https://github.com/tracseq/tracseq-2.0
    targetRevision: HEAD
    path: infrastructure/kubernetes/services
    
  destination:
    server: https://kubernetes.default.svc
    namespace: tracseq
    
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ApplyOutOfSyncOnly=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
        
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tracseq-infrastructure
  namespace: argocd
spec:
  project: default
  
  source:
    repoURL: https://github.com/tracseq/tracseq-2.0
    targetRevision: HEAD
    path: infrastructure/kubernetes/base
    
  destination:
    server: https://kubernetes.default.svc
    
  syncPolicy:
    automated:
      prune: false
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tracseq-monitoring
  namespace: argocd
spec:
  project: default
  
  source:
    repoURL: https://github.com/prometheus-community/helm-charts
    targetRevision: 55.5.0
    chart: kube-prometheus-stack
    helm:
      releaseName: prometheus
      values: |
        prometheus:
          prometheusSpec:
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: gp3
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 50Gi
            retention: 30d
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false
            
        grafana:
          adminPassword: ${GRAFANA_ADMIN_PASSWORD}
          persistence:
            enabled: true
            storageClassName: gp3
            size: 10Gi
          dashboardProviders:
            dashboardproviders.yaml:
              apiVersion: 1
              providers:
              - name: 'default'
                orgId: 1
                folder: ''
                type: file
                disableDeletion: false
                editable: true
                options:
                  path: /var/lib/grafana/dashboards/default
          dashboards:
            default:
              tracseq-overview:
                url: https://raw.githubusercontent.com/tracseq/tracseq-2.0/main/monitoring/grafana/dashboards/tracseq-overview.json
              microservices:
                url: https://raw.githubusercontent.com/tracseq/tracseq-2.0/main/monitoring/grafana/dashboards/microservices.json
                
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: gp3
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 10Gi
                      
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
    
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    - ServerSideApply=true
    
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tracseq-ingress
  namespace: argocd
spec:
  project: default
  
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.8.3
    chart: ingress-nginx
    helm:
      releaseName: ingress-nginx
      values: |
        controller:
          replicaCount: 3
          service:
            type: LoadBalancer
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
              namespace: monitoring
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: ingress-nginx
                topologyKey: kubernetes.io/hostname
                
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
    
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tracseq-cert-manager
  namespace: argocd
spec:
  project: default
  
  source:
    repoURL: https://charts.jetstack.io
    targetRevision: v1.13.3
    chart: cert-manager
    helm:
      releaseName: cert-manager
      values: |
        installCRDs: true
        prometheus:
          enabled: true
          servicemonitor:
            enabled: true
            namespace: monitoring
            
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
    
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
    
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: tracseq-secrets
  namespace: argocd
spec:
  project: default
  
  source:
    repoURL: https://charts.external-secrets.io
    targetRevision: 0.9.9
    chart: external-secrets
    helm:
      releaseName: external-secrets
      values: |
        installCRDs: true
        serviceMonitor:
          enabled: true
          namespace: monitoring
        webhook:
          create: true
          
  destination:
    server: https://kubernetes.default.svc
    namespace: external-secrets
    
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true