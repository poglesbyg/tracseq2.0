FROM rustlang/rust:nightly

WORKDIR /usr/src/app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    postgresql-client \
    inotify-tools \
    && rm -rf /var/lib/apt/lists/*

# Install cargo-watch for development
RUN cargo install cargo-watch

# Copy the source code (this avoids Windows volume mount issues)
COPY . .

# Set default environment variables (can be overridden at runtime)
ENV RUST_LOG=info
ENV STORAGE_PATH=/usr/local/bin/storage
ENV SQLX_OFFLINE=false

# Create storage directory
RUN mkdir -p /usr/local/bin/storage

# Build dependencies first (this will be cached if dependencies don't change)
RUN cargo build --release

# Expose the port
EXPOSE 3000

# For Windows development, we'll use a simple approach:
# Run the built binary with file watching simulation
CMD ["sh", "-c", "while true; do cargo run --bin lab_manager || echo 'Build failed, retrying in 5s...'; sleep 5; done"] 
